#!/usr/bin/env python3
"""
쿠팡 파트너스 API - 자동생성옵션 클라이언트
자동생성옵션 활성화/비활성화 기능
"""

from typing import Dict, Any
from .base_client import BaseClient
from .constants import (
    VENDOR_ITEM_AUTO_GENERATED_OPT_IN_API_PATH, VENDOR_ITEM_AUTO_GENERATED_OPT_OUT_API_PATH,
    SELLER_AUTO_GENERATED_OPT_IN_API_PATH, SELLER_AUTO_GENERATED_OPT_OUT_API_PATH
)
from .validators import validate_vendor_item_id


class AutoGeneratedOptionClient(BaseClient):
    """자동생성옵션 API 클라이언트"""
    
    def enable_vendor_item_auto_generated_option(self, vendor_item_id: int) -> Dict[str, Any]:
        """
        개별 벤더아이템 자동생성옵션 활성화
        
        Args:
            vendor_item_id: 벤더아이템ID
            
        Returns:
            Dict[str, Any]: 자동생성옵션 활성화 결과
        """
        # 벤더아이템ID 검증
        validate_vendor_item_id(vendor_item_id)
        
        api_path = VENDOR_ITEM_AUTO_GENERATED_OPT_IN_API_PATH.format(vendor_item_id)
        
        response = self._execute_api_call(
            method="POST",
            api_path=api_path,
            data={},
            operation="개별 벤더아이템 자동생성옵션 활성화",
            vendor_item_id=vendor_item_id
        )
        
        # PROCESSING 상태 처리
        if response.get("success") and response.get("originalResponse", {}).get("code") == "PROCESSING":
            response["processing"] = True
        
        return response
    
    def disable_vendor_item_auto_generated_option(self, vendor_item_id: int) -> Dict[str, Any]:
        """
        개별 벤더아이템 자동생성옵션 비활성화
        
        Args:
            vendor_item_id: 벤더아이템ID
            
        Returns:
            Dict[str, Any]: 자동생성옵션 비활성화 결과
        """
        # 벤더아이템ID 검증
        validate_vendor_item_id(vendor_item_id)
        
        api_path = VENDOR_ITEM_AUTO_GENERATED_OPT_OUT_API_PATH.format(vendor_item_id)
        
        response = self._execute_api_call(
            method="POST",
            api_path=api_path,
            data={},
            operation="개별 벤더아이템 자동생성옵션 비활성화",
            vendor_item_id=vendor_item_id
        )
        
        # PROCESSING 상태 처리
        if response.get("success") and response.get("originalResponse", {}).get("code") == "PROCESSING":
            response["processing"] = True
        
        return response
    
    def enable_seller_auto_generated_option(self) -> Dict[str, Any]:
        """
        전체 상품 자동생성옵션 활성화
        
        Returns:
            Dict[str, Any]: 전체 상품 자동생성옵션 활성화 결과
        """
        response = self._execute_api_call(
            method="POST",
            api_path=SELLER_AUTO_GENERATED_OPT_IN_API_PATH,
            data={},
            operation="전체 상품 자동생성옵션 활성화"
        )
        
        # PROCESSING 상태 처리
        if response.get("success") and response.get("originalResponse", {}).get("code") == "PROCESSING":
            response["processing"] = True
        
        return response
    
    def disable_seller_auto_generated_option(self) -> Dict[str, Any]:
        """
        전체 상품 자동생성옵션 비활성화
        
        Returns:
            Dict[str, Any]: 전체 상품 자동생성옵션 비활성화 결과
        """
        response = self._execute_api_call(
            method="POST",
            api_path=SELLER_AUTO_GENERATED_OPT_OUT_API_PATH,
            data={},
            operation="전체 상품 자동생성옵션 비활성화"
        )
        
        # PROCESSING 상태 처리
        if response.get("success") and response.get("originalResponse", {}).get("code") == "PROCESSING":
            response["processing"] = True
        
        return response